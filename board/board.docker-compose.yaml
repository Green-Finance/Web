services:
  board:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: board
    ports:
      - "8008:8008"
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  db:
    image: postgres:15-alpine
    container_name: board_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-h", "localhost", "-p", "5432"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: board_celery
    command: celery -A celery_task.worker worker -Q board --loglevel=info
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:
    external: true

volumes:
  pgdata:
