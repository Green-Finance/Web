services:
  django:
    build: .
    container_name: account
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

  celery:
    build: .
    container_name: celery-worker
    command: celery -A config worker -Q account --loglevel=info

    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - backend

  db:
    image: postgres:14-alpine
    container_name: account_db
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-h", "localhost", "-p", "5432" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - backend

networks:
  backend:
    external: true